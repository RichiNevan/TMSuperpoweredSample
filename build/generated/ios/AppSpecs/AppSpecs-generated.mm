/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "AppSpecs.h"


@implementation NativeSpecsSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeSpecsSpecJSI_setupAudio(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "setupAudio", @selector(setupAudio), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSpecsSpecJSI_cleanupAudio(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "cleanupAudio", @selector(cleanupAudio), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSpecsSpecJSI_setVolume(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "setVolume", @selector(setVolume:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSpecsSpecJSI_startOscillators(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "startOscillators", @selector(startOscillators:waveformL:freqR:waveformR:initialVolume:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSpecsSpecJSI_stopOscillators(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "stopOscillators", @selector(stopOscillators), args, count);
    }

  NativeSpecsSpecJSI::NativeSpecsSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["setupAudio"] = MethodMetadata {0, __hostFunction_NativeSpecsSpecJSI_setupAudio};
        
        
        methodMap_["cleanupAudio"] = MethodMetadata {0, __hostFunction_NativeSpecsSpecJSI_cleanupAudio};
        
        
        methodMap_["setVolume"] = MethodMetadata {1, __hostFunction_NativeSpecsSpecJSI_setVolume};
        
        
        methodMap_["startOscillators"] = MethodMetadata {5, __hostFunction_NativeSpecsSpecJSI_startOscillators};
        
        
        methodMap_["stopOscillators"] = MethodMetadata {0, __hostFunction_NativeSpecsSpecJSI_stopOscillators};
        
  }
} // namespace facebook::react
